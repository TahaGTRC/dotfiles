#!/usr/bin/env sh
export LC_ALL=en_US.UTF-8

 . "$HOME/.scripts/locations.sh"
 . "$HOME/.scripts/functions.sh"
 . "$HOME/.scripts/aliases.sh"

setxkbmap fr

true <<C
I linked /usr/local/bin/vi to /bin/vis
because vi is hard-coded in Yash's
command-line editor function (cmd_vi_edit_and_accept)
C

# Function to retrieve the current git branch
git_branch() {
    branch=$(git -C "$PWD" rev-parse --abbrev-ref HEAD 2>/dev/null)
    if [ -n "$branch" ]; then
        echo "($branch)"
    fi
}

# Set the PS1 prompt with colors, username, hostname, current directory, and git branch
update_prompt() {
  usr="$(stylize -f 154 -p "$(whoami)")"
  hst="$(stylize -f 214 -p "$(uname -n) ")"
  place="$(stylize -f 222 -p "$(echo "$PWD" | sed "s|$HOME|~|") ")"
  git="$(stylize -f 14 -s bold -p "$(git_branch)")"
  sign="$(stylize -f 2 -p "$ ")"
  export YASH_PS1="${usr}@${hst}${place}${sign}"
  export PS1R="${git}"
}

# This is needed for updating the prompt interactively
PROMPT_COMMAND=update_prompt

# Color predictions as dim
export PS1P='\fi.'

bindkey --vi-insert '\^L' clear-and-redraw-all
bindkey --vi-insert '\^A' beginning-of-line
bindkey --vi-insert '\^E' end-of-line

# shellcheck disable=SC3040
set -o braceexpand
# shellcheck disable=SC3040
set -o le-predict 

[ "$-" != "${-#*i}" ] || return

if [ ! "$1" = "profile" ]; then 
	[ "$PATH" ] && POST=":$PATH"
	PRE="/usr/lib/jvm/openjdk21/bin"
	export PATH="${PRE}${POST}"
fi

export APPIMAGE_EXTRACT_AND_RUN=1
